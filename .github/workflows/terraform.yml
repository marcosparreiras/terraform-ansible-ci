name: terraform ci

on:
  push:
    branches:
      - main

jobs:
  run-terraform:
    name: "Run Terraform"
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install terraform
        uses: hashicorp/setup-terraform@v3

      - name: Install ansible
        run: sudo apt-get update && sudo apt-get install -y ansible sshpass jq

      - name: Run terraform init
        run: terraform init
        env:
          ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID}}
          ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET}}
          ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID}}
          ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID}}
          TF_VAR_vm_password: ${{ secrets.TF_VAR_vm_admin_password }}

      - name: Run terraform fmt
        run: terraform fmt -check --diff

      - name: Execute terraform linter
        uses: terraform-linters/setup-tflint@v1

      - name: Execute checkov
        uses: bridgecrewio/checkov-action@master
        with:
          soft_fail: true

      - name: Run terraform plan
        run: terraform plan
        env:
          ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID}}
          ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET}}
          ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID}}
          ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID}}
          TF_VAR_vm_password: ${{ secrets.TF_VAR_vm_admin_password }}

      - name: Run terraform apply
        run: terraform apply -auto-approve -json > tf_output.json
        env:
          ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID}}
          ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET}}
          ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID}}
          ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID}}
          TF_VAR_vm_password: ${{ secrets.TF_VAR_vm_admin_password }}

      - name: Parse Terraform output
        id: parse_output
        run: echo "::set-output name=public_ip::$(jq -r '.values.outputs.public_ip_address.value' < tf_output.json)"

      - name: Add ssh directory
        run: mkdir -p ~/.ssh/ && touch ~/.ssh/known_hosts

      - name: Add remote host to known_hosts
        run: ssh-keyscan -H ${{ steps.parse_output.outputs.public_ip }} >> ~/.ssh/known_hosts

      - name: Execute ansible playbook
        run: ansible-playbook -i ./ansible/inventory.ini ./ansible/playbook.yml
